{
  "openapi": "3.1.0",
  "info": {
    "title": "Voice Assistant MCP Server",
    "version": "0.1.0"
  },
  "paths": {
    "/api/v1/dashboard": {
      "get": {
        "summary": "Get Dashboard",
        "description": "Get complete dashboard data - REAL DATA ONLY",
        "operationId": "get_dashboard_api_v1_dashboard_get",
        "parameters": [
          {
            "name": "symbol",
            "in": "query",
            "required": true,
            "schema": {
              "type": "string",
              "description": "Stock symbol",
              "title": "Symbol"
            },
            "description": "Stock symbol"
          },
          {
            "name": "range",
            "in": "query",
            "required": false,
            "schema": {
              "$ref": "#/components/schemas/TimeRange",
              "description": "Time range",
              "default": "1D"
            },
            "description": "Time range"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {}
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/chart": {
      "get": {
        "summary": "Get Chart",
        "description": "Get chart data only",
        "operationId": "get_chart_api_v1_chart_get",
        "parameters": [
          {
            "name": "symbol",
            "in": "query",
            "required": true,
            "schema": {
              "type": "string",
              "description": "Stock symbol",
              "title": "Symbol"
            },
            "description": "Stock symbol"
          },
          {
            "name": "range",
            "in": "query",
            "required": true,
            "schema": {
              "$ref": "#/components/schemas/TimeRange",
              "description": "Time range"
            },
            "description": "Time range"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {}
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/technical": {
      "get": {
        "summary": "Get Technical",
        "description": "Get technical analysis overview",
        "operationId": "get_technical_api_v1_technical_get",
        "parameters": [
          {
            "name": "symbol",
            "in": "query",
            "required": true,
            "schema": {
              "type": "string",
              "description": "Stock symbol",
              "title": "Symbol"
            },
            "description": "Stock symbol"
          },
          {
            "name": "range",
            "in": "query",
            "required": true,
            "schema": {
              "$ref": "#/components/schemas/TimeRange",
              "description": "Time range"
            },
            "description": "Time range"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {}
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/news": {
      "get": {
        "summary": "Get News",
        "description": "Get related news",
        "operationId": "get_news_api_v1_news_get",
        "parameters": [
          {
            "name": "symbol",
            "in": "query",
            "required": true,
            "schema": {
              "type": "string",
              "description": "Stock symbol",
              "title": "Symbol"
            },
            "description": "Stock symbol"
          },
          {
            "name": "limit",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer",
              "maximum": 20,
              "minimum": 1,
              "description": "Number of news items",
              "default": 6,
              "title": "Limit"
            },
            "description": "Number of news items"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {}
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/options/strategic-insights": {
      "get": {
        "summary": "Get Strategic Insights",
        "description": "Get options strategy recommendations",
        "operationId": "get_strategic_insights_api_v1_options_strategic_insights_get",
        "parameters": [
          {
            "name": "symbol",
            "in": "query",
            "required": true,
            "schema": {
              "type": "string",
              "description": "Stock symbol",
              "title": "Symbol"
            },
            "description": "Stock symbol"
          },
          {
            "name": "horizon_days",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer",
              "maximum": 365,
              "minimum": 1,
              "description": "Time horizon in days",
              "default": 30,
              "title": "Horizon Days"
            },
            "description": "Time horizon in days"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {}
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/alpaca/account": {
      "get": {
        "tags": [
          "alpaca"
        ],
        "summary": "Get Account",
        "description": "Get Alpaca account information.",
        "operationId": "get_account_api_alpaca_account_get",
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {}
              }
            }
          }
        }
      }
    },
    "/api/alpaca/quote/{symbol}": {
      "get": {
        "tags": [
          "alpaca"
        ],
        "summary": "Get Quote",
        "description": "Get latest quote for a symbol.",
        "operationId": "get_quote_api_alpaca_quote__symbol__get",
        "parameters": [
          {
            "name": "symbol",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "title": "Symbol"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {}
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/alpaca/snapshot/{symbol}": {
      "get": {
        "tags": [
          "alpaca"
        ],
        "summary": "Get Snapshot",
        "description": "Get comprehensive snapshot data for a symbol.",
        "operationId": "get_snapshot_api_alpaca_snapshot__symbol__get",
        "parameters": [
          {
            "name": "symbol",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "title": "Symbol"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {}
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/alpaca/bars/{symbol}": {
      "get": {
        "tags": [
          "alpaca"
        ],
        "summary": "Get Bars",
        "description": "Get historical bars for a symbol.",
        "operationId": "get_bars_api_alpaca_bars__symbol__get",
        "parameters": [
          {
            "name": "symbol",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "title": "Symbol"
            }
          },
          {
            "name": "timeframe",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string",
              "description": "Timeframe: 1Min, 5Min, 15Min, 1Hour, 1Day, etc",
              "default": "1Day",
              "title": "Timeframe"
            },
            "description": "Timeframe: 1Min, 5Min, 15Min, 1Hour, 1Day, etc"
          },
          {
            "name": "days",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer",
              "description": "Number of days back",
              "default": 30,
              "title": "Days"
            },
            "description": "Number of days back"
          },
          {
            "name": "limit",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "integer"
                },
                {
                  "type": "null"
                }
              ],
              "description": "Limit number of bars",
              "title": "Limit"
            },
            "description": "Limit number of bars"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {}
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/alpaca/positions": {
      "get": {
        "tags": [
          "alpaca"
        ],
        "summary": "Get Positions",
        "description": "Get all open positions.",
        "operationId": "get_positions_api_alpaca_positions_get",
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {}
              }
            }
          }
        }
      }
    },
    "/api/alpaca/orders": {
      "get": {
        "tags": [
          "alpaca"
        ],
        "summary": "Get Orders",
        "description": "Get orders with specified status.",
        "operationId": "get_orders_api_alpaca_orders_get",
        "parameters": [
          {
            "name": "status",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string",
              "description": "Order status: all, open, closed",
              "default": "all",
              "title": "Status"
            },
            "description": "Order status: all, open, closed"
          },
          {
            "name": "limit",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer",
              "description": "Maximum number of orders",
              "default": 50,
              "title": "Limit"
            },
            "description": "Maximum number of orders"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {}
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/alpaca/market-status": {
      "get": {
        "tags": [
          "alpaca"
        ],
        "summary": "Get Market Status",
        "description": "Check if market is open.",
        "operationId": "get_market_status_api_alpaca_market_status_get",
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {}
              }
            }
          }
        }
      }
    },
    "/api/alpaca/stock-price": {
      "get": {
        "tags": [
          "alpaca"
        ],
        "summary": "Get Stock Price",
        "description": "Get current stock price (compatible with existing frontend).",
        "operationId": "get_stock_price_api_alpaca_stock_price_get",
        "parameters": [
          {
            "name": "symbol",
            "in": "query",
            "required": true,
            "schema": {
              "type": "string",
              "title": "Symbol"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {}
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/enhanced/market-data": {
      "get": {
        "tags": [
          "enhanced"
        ],
        "summary": "Get Enhanced Market Data",
        "description": "Get enhanced market data from available sources.\n\nArgs:\n    symbol: Stock ticker symbol (e.g., AAPL, TSLA)\n    source: Preferred data source ('yahoo', 'alpaca', or 'auto')\n    \nReturns:\n    Market data with source attribution",
        "operationId": "get_enhanced_market_data_api_enhanced_market_data_get",
        "parameters": [
          {
            "name": "symbol",
            "in": "query",
            "required": true,
            "schema": {
              "type": "string",
              "description": "Stock ticker symbol",
              "title": "Symbol"
            },
            "description": "Stock ticker symbol"
          },
          {
            "name": "source",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string",
              "description": "Data source: 'yahoo', 'alpaca', or 'auto'",
              "default": "auto",
              "title": "Source"
            },
            "description": "Data source: 'yahoo', 'alpaca', or 'auto'"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "additionalProperties": true,
                  "title": "Response Get Enhanced Market Data Api Enhanced Market Data Get"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/enhanced/historical-data": {
      "get": {
        "tags": [
          "enhanced"
        ],
        "summary": "Get Enhanced Historical Data",
        "description": "Get historical data from available sources.\n\nArgs:\n    symbol: Stock ticker symbol\n    days: Number of days of historical data\n    source: Preferred data source\n    \nReturns:\n    Historical data with source attribution",
        "operationId": "get_enhanced_historical_data_api_enhanced_historical_data_get",
        "parameters": [
          {
            "name": "symbol",
            "in": "query",
            "required": true,
            "schema": {
              "type": "string",
              "description": "Stock ticker symbol",
              "title": "Symbol"
            },
            "description": "Stock ticker symbol"
          },
          {
            "name": "days",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer",
              "description": "Number of days of history",
              "default": 30,
              "title": "Days"
            },
            "description": "Number of days of history"
          },
          {
            "name": "source",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string",
              "description": "Data source: 'yahoo', 'alpaca', or 'auto'",
              "default": "auto",
              "title": "Source"
            },
            "description": "Data source: 'yahoo', 'alpaca', or 'auto'"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "additionalProperties": true,
                  "title": "Response Get Enhanced Historical Data Api Enhanced Historical Data Get"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/enhanced/alpaca-account": {
      "get": {
        "tags": [
          "enhanced"
        ],
        "summary": "Get Alpaca Account",
        "description": "Get Alpaca account information.",
        "operationId": "get_alpaca_account_api_enhanced_alpaca_account_get",
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {}
              }
            }
          }
        }
      }
    },
    "/api/enhanced/alpaca-positions": {
      "get": {
        "tags": [
          "enhanced"
        ],
        "summary": "Get Alpaca Positions",
        "description": "Get all open positions from Alpaca.",
        "operationId": "get_alpaca_positions_api_enhanced_alpaca_positions_get",
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {}
              }
            }
          }
        }
      }
    },
    "/api/enhanced/alpaca-orders": {
      "get": {
        "tags": [
          "enhanced"
        ],
        "summary": "Get Alpaca Orders",
        "description": "Get orders from Alpaca.",
        "operationId": "get_alpaca_orders_api_enhanced_alpaca_orders_get",
        "parameters": [
          {
            "name": "status",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string",
              "description": "Order status: 'open', 'closed', or 'all'",
              "default": "open",
              "title": "Status"
            },
            "description": "Order status: 'open', 'closed', or 'all'"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {}
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/enhanced/market-status": {
      "get": {
        "tags": [
          "enhanced"
        ],
        "summary": "Get Market Status",
        "description": "Get current market status from Alpaca.",
        "operationId": "get_market_status_api_enhanced_market_status_get",
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {}
              }
            }
          }
        }
      }
    },
    "/api/enhanced/compare-sources": {
      "get": {
        "tags": [
          "enhanced"
        ],
        "summary": "Compare Data Sources",
        "description": "Compare data from both Yahoo Finance and Alpaca for a symbol.\nUseful for debugging and data quality assessment.",
        "operationId": "compare_data_sources_api_enhanced_compare_sources_get",
        "parameters": [
          {
            "name": "symbol",
            "in": "query",
            "required": true,
            "schema": {
              "type": "string",
              "description": "Stock ticker symbol",
              "title": "Symbol"
            },
            "description": "Stock ticker symbol"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "additionalProperties": true,
                  "title": "Response Compare Data Sources Api Enhanced Compare Sources Get"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/agent/orchestrate": {
      "post": {
        "summary": "Orchestrate Agent",
        "description": "Process a query using the agent orchestrator with function calling.",
        "operationId": "orchestrate_agent_api_agent_orchestrate_post",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/QueryRequest"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {}
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/agent/stream": {
      "post": {
        "tags": [
          "agent"
        ],
        "summary": "Stream Query",
        "description": "Stream a response from the agent.\n\nReturns a streaming response that yields text chunks as they're generated.\nNote: Tool calling happens before streaming begins.",
        "operationId": "stream_query_api_agent_stream_post",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/AgentQuery"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {}
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/agent/tools": {
      "get": {
        "summary": "Get Agent Tools",
        "description": "Get available tools for the agent.",
        "operationId": "get_agent_tools_api_agent_tools_get",
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {}
              }
            }
          }
        }
      }
    },
    "/api/agent/clear-cache": {
      "post": {
        "summary": "Clear Agent Cache",
        "description": "Clear the agent's cache.",
        "operationId": "clear_agent_cache_api_agent_clear_cache_post",
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {}
              }
            }
          }
        }
      }
    },
    "/api/agent/tools/chart": {
      "get": {
        "tags": [
          "agent"
        ],
        "summary": "Get Chart Tools",
        "description": "Get all available chart manipulation tools derived from knowledge base.\n\nReturns chart indicators, drawing tools, and other chart controls\nthat the voice agent can use to manipulate the trading chart.",
        "operationId": "get_chart_tools_api_agent_tools_chart_get",
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {}
              }
            }
          }
        }
      }
    },
    "/api/agent/tools/chart/search": {
      "get": {
        "tags": [
          "agent"
        ],
        "summary": "Search Chart Tools",
        "description": "Search for chart tools using semantic search.\n\nArgs:\n    query: Natural language query (e.g., \"show momentum indicators\")\n    top_k: Maximum number of results to return\n\nReturns:\n    List of relevant chart tools with knowledge base context",
        "operationId": "search_chart_tools_api_agent_tools_chart_search_get",
        "parameters": [
          {
            "name": "query",
            "in": "query",
            "required": true,
            "schema": {
              "type": "string",
              "title": "Query"
            }
          },
          {
            "name": "top_k",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer",
              "default": 5,
              "title": "Top K"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {}
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/agent/health": {
      "get": {
        "summary": "Agent Health",
        "description": "Check agent orchestrator health.",
        "operationId": "agent_health_api_agent_health_get",
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {}
              }
            }
          }
        }
      }
    },
    "/api/agent/test/toggle-education-mode": {
      "post": {
        "tags": [
          "agent"
        ],
        "summary": "Toggle Education Mode",
        "description": "Toggle education mode between LLM and templates (for A/B testing).",
        "operationId": "toggle_education_mode_api_agent_test_toggle_education_mode_post",
        "parameters": [
          {
            "name": "enabled",
            "in": "query",
            "required": true,
            "schema": {
              "type": "boolean",
              "title": "Enabled"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {}
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/agent/analyze-chart": {
      "post": {
        "tags": [
          "agent"
        ],
        "summary": "Analyze Chart",
        "description": "Analyze a chart image using the vision model-based analyzer.",
        "operationId": "analyze_chart_api_agent_analyze_chart_post",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ChartImageRequest"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {}
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/agent/chart-snapshot": {
      "post": {
        "tags": [
          "agent"
        ],
        "summary": "Ingest Chart Snapshot",
        "description": "Ingest a chart snapshot and optionally trigger automated analysis.",
        "operationId": "ingest_chart_snapshot_api_agent_chart_snapshot_post",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ChartSnapshotIngestRequest"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ChartSnapshotResponse"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/agent/chart-snapshot/{symbol}": {
      "get": {
        "tags": [
          "agent"
        ],
        "summary": "Get Latest Chart Snapshot",
        "description": "Return the latest chart snapshot for a symbol/timeframe.",
        "operationId": "get_latest_chart_snapshot_api_agent_chart_snapshot__symbol__get",
        "parameters": [
          {
            "name": "symbol",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "title": "Symbol"
            }
          },
          {
            "name": "timeframe",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "null"
                }
              ],
              "title": "Timeframe"
            }
          },
          {
            "name": "include_image",
            "in": "query",
            "required": false,
            "schema": {
              "type": "boolean",
              "default": false,
              "title": "Include Image"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "anyOf": [
                    {
                      "$ref": "#/components/schemas/ChartSnapshotResponse"
                    },
                    {
                      "type": "null"
                    }
                  ],
                  "title": "Response Get Latest Chart Snapshot Api Agent Chart Snapshot  Symbol  Get"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/agent/voice-query": {
      "post": {
        "tags": [
          "agent"
        ],
        "summary": "Process Voice Query",
        "description": "Process a voice query: agent processes it and sends response to TTS.\n\nThis is the integration point between the agent and voice interface:\n1. Receives transcript from STT\n2. Agent processes query with tools\n3. Sends response text to TTS via Realtime API\n\nReturns the agent response data (text version).",
        "operationId": "process_voice_query_api_agent_voice_query_post",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/AgentQuery"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {}
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/agent/pattern-verdict": {
      "post": {
        "tags": [
          "agent"
        ],
        "summary": "Submit Pattern Verdict",
        "description": "Submit analyst verdict for a pattern.\n\nThis endpoint:\n1. Records the analyst's decision (accept/reject/defer)\n2. Updates pattern state in the system\n3. Triggers pattern overlay updates via WebSocket\n4. Creates audit trail for compliance",
        "operationId": "submit_pattern_verdict_api_agent_pattern_verdict_post",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/PatternVerdict"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PatternVerdictResponse"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/agent/pattern-history": {
      "get": {
        "tags": [
          "agent"
        ],
        "summary": "Get Pattern History",
        "description": "Retrieve pattern verdict history with optional filtering.\n\nThis endpoint provides audit trail and analytics for:\n- Pattern validation accuracy over time\n- Operator performance metrics\n- Pattern success rates by type",
        "operationId": "get_pattern_history_api_agent_pattern_history_get",
        "parameters": [
          {
            "name": "symbol",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "null"
                }
              ],
              "title": "Symbol"
            }
          },
          {
            "name": "timeframe",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "null"
                }
              ],
              "title": "Timeframe"
            }
          },
          {
            "name": "operator_id",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "null"
                }
              ],
              "title": "Operator Id"
            }
          },
          {
            "name": "limit",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer",
              "default": 100,
              "title": "Limit"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/PatternHistoryEntry"
                  },
                  "title": "Response Get Pattern History Api Agent Pattern History Get"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/verification/run": {
      "post": {
        "tags": [
          "verification"
        ],
        "summary": "Run Verification",
        "description": "Start a verification session.\n\nThis runs asynchronously and returns a session ID for tracking.",
        "operationId": "run_verification_api_verification_run_post",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/VerificationRequest"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/VerificationResponse"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/verification/status/{session_id}": {
      "get": {
        "tags": [
          "verification"
        ],
        "summary": "Get Verification Status",
        "description": "Get the status of a verification session.",
        "operationId": "get_verification_status_api_verification_status__session_id__get",
        "parameters": [
          {
            "name": "session_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "title": "Session Id"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/VerificationStatus"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/verification/report/{session_id}": {
      "get": {
        "tags": [
          "verification"
        ],
        "summary": "Get Verification Report",
        "description": "Get the full report for a verification session.\n\nReturns detailed results including issues found and suggested fixes.",
        "operationId": "get_verification_report_api_verification_report__session_id__get",
        "parameters": [
          {
            "name": "session_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "title": "Session Id"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {}
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/verification/sessions": {
      "get": {
        "tags": [
          "verification"
        ],
        "summary": "List Verification Sessions",
        "description": "List all verification sessions.",
        "operationId": "list_verification_sessions_api_verification_sessions_get",
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {}
              }
            }
          }
        }
      }
    },
    "/api/verification/session/{session_id}": {
      "delete": {
        "tags": [
          "verification"
        ],
        "summary": "Delete Verification Session",
        "description": "Delete a verification session from memory.",
        "operationId": "delete_verification_session_api_verification_session__session_id__delete",
        "parameters": [
          {
            "name": "session_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "title": "Session Id"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {}
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/verification/quick-check": {
      "post": {
        "tags": [
          "verification"
        ],
        "summary": "Quick Verification Check",
        "description": "Run a quick verification check on critical issues.\n\nThis is a simplified endpoint that runs key tests synchronously.",
        "operationId": "quick_verification_check_api_verification_quick_check_post",
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {}
              }
            }
          }
        }
      }
    },
    "/api/debug/test-direct": {
      "get": {
        "summary": "Test Direct Service",
        "description": "Debug endpoint to test Direct service initialization.",
        "operationId": "test_direct_service_api_debug_test_direct_get",
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {}
              }
            }
          }
        }
      }
    },
    "/health": {
      "get": {
        "summary": "Health Check",
        "description": "Health check endpoint.",
        "operationId": "health_check_health_get",
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {}
              }
            }
          }
        }
      }
    },
    "/metrics": {
      "get": {
        "summary": "Get Metrics",
        "description": "Get knowledge system performance metrics with authentication and rate limiting.",
        "operationId": "get_metrics_metrics_get",
        "parameters": [
          {
            "name": "authorization",
            "in": "header",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "null"
                }
              ],
              "title": "Authorization"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {}
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/ml/metrics": {
      "get": {
        "summary": "Get Ml Metrics",
        "description": "Get Phase 5 ML performance metrics",
        "operationId": "get_ml_metrics_api_ml_metrics_get",
        "parameters": [
          {
            "name": "hours",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer",
              "default": 1,
              "title": "Hours"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {}
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/ml/alerts": {
      "get": {
        "summary": "Get Ml Alerts",
        "description": "Get current ML alerts and warnings",
        "operationId": "get_ml_alerts_api_ml_alerts_get",
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {}
              }
            }
          }
        }
      }
    },
    "/api/ml/health": {
      "get": {
        "summary": "Get Ml Health",
        "description": "Get Phase 5 ML system health status",
        "operationId": "get_ml_health_api_ml_health_get",
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {}
              }
            }
          }
        }
      }
    },
    "/api/ml/baseline": {
      "post": {
        "summary": "Set Ml Baseline",
        "description": "Set baseline feature distribution for drift detection",
        "operationId": "set_ml_baseline_api_ml_baseline_post",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "additionalProperties": true,
                "type": "object",
                "title": "Baseline Data"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {}
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/stock-price": {
      "get": {
        "summary": "Get Stock Price",
        "description": "Get comprehensive stock data using the appropriate service.",
        "operationId": "get_stock_price_api_stock_price_get",
        "parameters": [
          {
            "name": "symbol",
            "in": "query",
            "required": true,
            "schema": {
              "type": "string",
              "title": "Symbol"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {}
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/symbol-search": {
      "get": {
        "summary": "Search Symbols",
        "description": "Search for stock symbols using Alpaca Markets API.",
        "operationId": "search_symbols_api_symbol_search_get",
        "parameters": [
          {
            "name": "query",
            "in": "query",
            "required": true,
            "schema": {
              "type": "string",
              "title": "Query"
            }
          },
          {
            "name": "limit",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer",
              "default": 20,
              "title": "Limit"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {}
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/comprehensive-stock-data": {
      "get": {
        "summary": "Get Comprehensive Stock Data",
        "description": "Get all available data for a stock - matches ChatGPT capabilities.",
        "operationId": "get_comprehensive_stock_data_api_comprehensive_stock_data_get",
        "parameters": [
          {
            "name": "symbol",
            "in": "query",
            "required": true,
            "schema": {
              "type": "string",
              "title": "Symbol"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {}
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/technical-indicators": {
      "get": {
        "summary": "Get Technical Indicators",
        "description": "Get specific technical indicators for a stock symbol.",
        "operationId": "get_technical_indicators_api_technical_indicators_get",
        "parameters": [
          {
            "name": "symbol",
            "in": "query",
            "required": true,
            "schema": {
              "type": "string",
              "title": "Symbol"
            }
          },
          {
            "name": "indicators",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string",
              "default": "fibonacci,macd,rsi,bollinger,stochastic",
              "title": "Indicators"
            }
          },
          {
            "name": "period",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer",
              "default": 100,
              "title": "Period"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {}
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/stock-history": {
      "get": {
        "summary": "Get Stock History",
        "description": "Get historical stock data using the appropriate service.",
        "operationId": "get_stock_history_api_stock_history_get",
        "parameters": [
          {
            "name": "symbol",
            "in": "query",
            "required": true,
            "schema": {
              "type": "string",
              "title": "Symbol"
            }
          },
          {
            "name": "days",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer",
              "default": 50,
              "title": "Days"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {}
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/stock-news": {
      "get": {
        "summary": "Get Stock News",
        "description": "Get latest news for a stock using the appropriate service.",
        "operationId": "get_stock_news_api_stock_news_get",
        "parameters": [
          {
            "name": "symbol",
            "in": "query",
            "required": true,
            "schema": {
              "type": "string",
              "title": "Symbol"
            }
          },
          {
            "name": "limit",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer",
              "default": 10,
              "title": "Limit"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {}
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/analyst-ratings": {
      "get": {
        "summary": "Get Analyst Ratings",
        "description": "Get analyst ratings and price targets.",
        "operationId": "get_analyst_ratings_api_analyst_ratings_get",
        "parameters": [
          {
            "name": "symbol",
            "in": "query",
            "required": true,
            "schema": {
              "type": "string",
              "title": "Symbol"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {}
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/options-chain": {
      "get": {
        "summary": "Get Options Chain",
        "description": "Get options chain data.",
        "operationId": "get_options_chain_api_options_chain_get",
        "parameters": [
          {
            "name": "symbol",
            "in": "query",
            "required": true,
            "schema": {
              "type": "string",
              "title": "Symbol"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {}
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/market-movers": {
      "get": {
        "summary": "Get Market Movers",
        "description": "Get trending stocks and market movers.",
        "operationId": "get_market_movers_api_market_movers_get",
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {}
              }
            }
          }
        }
      }
    },
    "/api/market-overview": {
      "get": {
        "summary": "Get Market Overview",
        "description": "Get market overview for ElevenLabs tool webhook.",
        "operationId": "get_market_overview_api_market_overview_get",
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {}
              }
            }
          }
        }
      }
    },
    "/elevenlabs/signed-url": {
      "get": {
        "summary": "Get Elevenlabs Signed Url",
        "description": "Proxy to fetch ElevenLabs signed WebSocket URL for a given agent.\n\nRequires ELEVENLABS_API_KEY in environment. If agent_id not provided, uses ELEVENLABS_AGENT_ID.",
        "operationId": "get_elevenlabs_signed_url_elevenlabs_signed_url_get",
        "parameters": [
          {
            "name": "agent_id",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "null"
                }
              ],
              "title": "Agent Id"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {}
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/conversations/record": {
      "post": {
        "summary": "Record Conversation",
        "description": "Record a conversation message to Supabase.",
        "operationId": "record_conversation_conversations_record_post",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ConversationRecordRequest"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {}
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/agent/diag": {
      "get": {
        "summary": "Agent Diagnostics",
        "description": "Diagnostic endpoint: SDK, flags, and last per-phase timings from orchestrator.",
        "operationId": "agent_diagnostics_api_agent_diag_get",
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {}
              }
            }
          }
        }
      }
    },
    "/ask": {
      "post": {
        "summary": "Ask Assistant",
        "description": "Process a voice query through the Agent Orchestrator.",
        "operationId": "ask_assistant_ask_post",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/QueryRequest"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/QueryResponse"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/debug/ask": {
      "get": {
        "summary": "Debug Ask Endpoint",
        "description": "Debug endpoint to diagnose /ask issues.",
        "operationId": "debug_ask_endpoint_debug_ask_get",
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {}
              }
            }
          }
        }
      }
    },
    "/openai/realtime/session": {
      "post": {
        "summary": "Create Openai Session",
        "description": "Create a new OpenAI Realtime session.",
        "operationId": "create_openai_session_openai_realtime_session_post",
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {}
              }
            }
          }
        }
      }
    },
    "/openai/tts": {
      "post": {
        "summary": "Generate Tts",
        "description": "Generate TTS audio using OpenAI's /v1/audio/speech API.",
        "operationId": "generate_tts_openai_tts_post",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/TTSRequest"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {}
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/realtime-relay/status": {
      "get": {
        "summary": "Relay Status",
        "description": "Get relay server status and active sessions.",
        "operationId": "relay_status_realtime_relay_status_get",
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {}
              }
            }
          }
        }
      }
    }
  },
  "components": {
    "schemas": {
      "AgentQuery": {
        "properties": {
          "query": {
            "type": "string",
            "title": "Query"
          },
          "conversation_history": {
            "anyOf": [
              {
                "items": {
                  "additionalProperties": {
                    "type": "string"
                  },
                  "type": "object"
                },
                "type": "array"
              },
              {
                "type": "null"
              }
            ],
            "title": "Conversation History"
          },
          "stream": {
            "type": "boolean",
            "title": "Stream",
            "default": false
          },
          "session_id": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Session Id"
          },
          "user_id": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "User Id"
          }
        },
        "type": "object",
        "required": [
          "query"
        ],
        "title": "AgentQuery",
        "description": "Request model for agent queries."
      },
      "AgentResponse": {
        "properties": {
          "text": {
            "type": "string",
            "title": "Text"
          },
          "tools_used": {
            "items": {
              "type": "string"
            },
            "type": "array",
            "title": "Tools Used"
          },
          "data": {
            "additionalProperties": true,
            "type": "object",
            "title": "Data"
          },
          "timestamp": {
            "type": "string",
            "title": "Timestamp"
          },
          "model": {
            "type": "string",
            "title": "Model"
          },
          "cached": {
            "type": "boolean",
            "title": "Cached",
            "default": false
          },
          "session_id": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Session Id"
          },
          "chart_commands": {
            "anyOf": [
              {
                "items": {
                  "type": "string"
                },
                "type": "array"
              },
              {
                "type": "null"
              }
            ],
            "title": "Chart Commands"
          }
        },
        "type": "object",
        "required": [
          "text",
          "tools_used",
          "data",
          "timestamp",
          "model"
        ],
        "title": "AgentResponse",
        "description": "Response model for agent queries."
      },
      "ChartImageRequest": {
        "properties": {
          "image_base64": {
            "type": "string",
            "title": "Image Base64"
          },
          "context": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Context"
          }
        },
        "type": "object",
        "required": [
          "image_base64"
        ],
        "title": "ChartImageRequest",
        "description": "Request model for chart image analysis."
      },
      "ChartSnapshotIngestRequest": {
        "properties": {
          "symbol": {
            "type": "string",
            "title": "Symbol"
          },
          "timeframe": {
            "type": "string",
            "title": "Timeframe"
          },
          "image_base64": {
            "type": "string",
            "title": "Image Base64"
          },
          "chart_commands": {
            "anyOf": [
              {
                "items": {
                  "type": "string"
                },
                "type": "array"
              },
              {
                "type": "null"
              }
            ],
            "title": "Chart Commands"
          },
          "metadata": {
            "anyOf": [
              {
                "additionalProperties": true,
                "type": "object"
              },
              {
                "type": "null"
              }
            ],
            "title": "Metadata"
          },
          "vision_model": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Vision Model"
          },
          "auto_analyze": {
            "anyOf": [
              {
                "type": "boolean"
              },
              {
                "type": "null"
              }
            ],
            "title": "Auto Analyze"
          }
        },
        "type": "object",
        "required": [
          "symbol",
          "timeframe",
          "image_base64"
        ],
        "title": "ChartSnapshotIngestRequest",
        "description": "Payload for ingesting chart snapshots from headless service."
      },
      "ChartSnapshotResponse": {
        "properties": {
          "symbol": {
            "type": "string",
            "title": "Symbol"
          },
          "timeframe": {
            "type": "string",
            "title": "Timeframe"
          },
          "captured_at": {
            "type": "string",
            "format": "date-time",
            "title": "Captured At"
          },
          "chart_commands": {
            "items": {
              "type": "string"
            },
            "type": "array",
            "title": "Chart Commands"
          },
          "metadata": {
            "additionalProperties": true,
            "type": "object",
            "title": "Metadata"
          },
          "vision_model": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Vision Model"
          },
          "analysis": {
            "anyOf": [
              {
                "additionalProperties": true,
                "type": "object"
              },
              {
                "type": "null"
              }
            ],
            "title": "Analysis"
          },
          "analysis_error": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Analysis Error"
          }
        },
        "type": "object",
        "required": [
          "symbol",
          "timeframe",
          "captured_at",
          "chart_commands",
          "metadata"
        ],
        "title": "ChartSnapshotResponse",
        "description": "Response model for chart snapshot operations."
      },
      "ConversationRecordRequest": {
        "properties": {
          "session_id": {
            "type": "string",
            "title": "Session Id"
          },
          "role": {
            "type": "string",
            "title": "Role"
          },
          "content": {
            "type": "string",
            "title": "Content"
          },
          "user_id": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "User Id"
          }
        },
        "type": "object",
        "required": [
          "session_id",
          "role",
          "content"
        ],
        "title": "ConversationRecordRequest",
        "description": "Request model for recording conversation messages."
      },
      "HTTPValidationError": {
        "properties": {
          "detail": {
            "items": {
              "$ref": "#/components/schemas/ValidationError"
            },
            "type": "array",
            "title": "Detail"
          }
        },
        "type": "object",
        "title": "HTTPValidationError"
      },
      "PatternHistoryEntry": {
        "properties": {
          "pattern_id": {
            "type": "string",
            "title": "Pattern Id"
          },
          "verdict": {
            "type": "string",
            "title": "Verdict"
          },
          "submitted_at": {
            "type": "string",
            "format": "date-time",
            "title": "Submitted At"
          },
          "operator_id": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Operator Id"
          },
          "notes": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Notes"
          },
          "symbol": {
            "type": "string",
            "title": "Symbol"
          },
          "timeframe": {
            "type": "string",
            "title": "Timeframe"
          },
          "pattern_type": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Pattern Type"
          },
          "confidence": {
            "anyOf": [
              {
                "type": "number"
              },
              {
                "type": "null"
              }
            ],
            "title": "Confidence"
          }
        },
        "type": "object",
        "required": [
          "pattern_id",
          "verdict",
          "submitted_at",
          "operator_id",
          "notes",
          "symbol",
          "timeframe",
          "pattern_type",
          "confidence"
        ],
        "title": "PatternHistoryEntry",
        "description": "Model for pattern verdict history entry."
      },
      "PatternVerdict": {
        "properties": {
          "pattern_id": {
            "type": "string",
            "title": "Pattern Id"
          },
          "verdict": {
            "type": "string",
            "title": "Verdict"
          },
          "operator_id": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Operator Id"
          },
          "notes": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Notes"
          },
          "symbol": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Symbol"
          },
          "timeframe": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Timeframe"
          }
        },
        "type": "object",
        "required": [
          "pattern_id",
          "verdict"
        ],
        "title": "PatternVerdict",
        "description": "Request model for pattern verdict submission."
      },
      "PatternVerdictResponse": {
        "properties": {
          "pattern_id": {
            "type": "string",
            "title": "Pattern Id"
          },
          "verdict": {
            "type": "string",
            "title": "Verdict"
          },
          "submitted_at": {
            "type": "string",
            "format": "date-time",
            "title": "Submitted At"
          },
          "operator_id": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Operator Id"
          },
          "notes": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Notes"
          },
          "symbol": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Symbol"
          },
          "timeframe": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Timeframe"
          }
        },
        "type": "object",
        "required": [
          "pattern_id",
          "verdict",
          "submitted_at",
          "operator_id",
          "notes",
          "symbol",
          "timeframe"
        ],
        "title": "PatternVerdictResponse",
        "description": "Response model for pattern verdict operations."
      },
      "QueryRequest": {
        "properties": {
          "query": {
            "type": "string",
            "title": "Query"
          },
          "session_id": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Session Id"
          },
          "user_id": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "User Id"
          },
          "include_history": {
            "type": "boolean",
            "title": "Include History",
            "default": true
          },
          "voice_enabled": {
            "type": "boolean",
            "title": "Voice Enabled",
            "default": false
          }
        },
        "type": "object",
        "required": [
          "query"
        ],
        "title": "QueryRequest",
        "description": "Request model for voice queries."
      },
      "QueryResponse": {
        "properties": {
          "response": {
            "type": "string",
            "title": "Response"
          },
          "session_id": {
            "type": "string",
            "title": "Session Id"
          },
          "timestamp": {
            "type": "string",
            "title": "Timestamp"
          },
          "audio_url": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Audio Url"
          },
          "tool_results": {
            "anyOf": [
              {
                "additionalProperties": true,
                "type": "object"
              },
              {
                "type": "null"
              }
            ],
            "title": "Tool Results"
          },
          "chart_commands": {
            "anyOf": [
              {
                "items": {
                  "type": "string"
                },
                "type": "array"
              },
              {
                "type": "null"
              }
            ],
            "title": "Chart Commands"
          }
        },
        "type": "object",
        "required": [
          "response",
          "session_id",
          "timestamp"
        ],
        "title": "QueryResponse",
        "description": "Response model for voice queries."
      },
      "TTSRequest": {
        "properties": {
          "text": {
            "type": "string",
            "title": "Text"
          },
          "voice": {
            "type": "string",
            "title": "Voice",
            "default": "alloy"
          }
        },
        "type": "object",
        "required": [
          "text"
        ],
        "title": "TTSRequest"
      },
      "TimeRange": {
        "type": "string",
        "enum": [
          "10S",
          "30S",
          "1m",
          "3m",
          "5m",
          "10m",
          "15m",
          "30m",
          "1H",
          "2H",
          "3H",
          "4H",
          "6H",
          "8H",
          "12H",
          "1D",
          "2D",
          "3D",
          "5D",
          "1W",
          "1M",
          "6M",
          "YTD",
          "1Y",
          "2Y",
          "3Y",
          "5Y",
          "MAX"
        ],
        "title": "TimeRange"
      },
      "ToolSchema": {
        "properties": {
          "name": {
            "type": "string",
            "title": "Name"
          },
          "description": {
            "type": "string",
            "title": "Description"
          },
          "parameters": {
            "additionalProperties": true,
            "type": "object",
            "title": "Parameters"
          }
        },
        "type": "object",
        "required": [
          "name",
          "description",
          "parameters"
        ],
        "title": "ToolSchema",
        "description": "Model for tool schema information."
      },
      "ValidationError": {
        "properties": {
          "loc": {
            "items": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "integer"
                }
              ]
            },
            "type": "array",
            "title": "Location"
          },
          "msg": {
            "type": "string",
            "title": "Message"
          },
          "type": {
            "type": "string",
            "title": "Error Type"
          }
        },
        "type": "object",
        "required": [
          "loc",
          "msg",
          "type"
        ],
        "title": "ValidationError"
      },
      "VerificationRequest": {
        "properties": {
          "scenarios": {
            "anyOf": [
              {
                "items": {
                  "type": "string"
                },
                "type": "array"
              },
              {
                "type": "null"
              }
            ],
            "title": "Scenarios"
          },
          "tunnel_url": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Tunnel Url"
          }
        },
        "type": "object",
        "title": "VerificationRequest",
        "description": "Request to run verification scenarios."
      },
      "VerificationResponse": {
        "properties": {
          "session_id": {
            "type": "string",
            "title": "Session Id"
          },
          "status": {
            "type": "string",
            "title": "Status"
          },
          "message": {
            "type": "string",
            "title": "Message"
          }
        },
        "type": "object",
        "required": [
          "session_id",
          "status",
          "message"
        ],
        "title": "VerificationResponse",
        "description": "Response from verification request."
      },
      "VerificationStatus": {
        "properties": {
          "session_id": {
            "type": "string",
            "title": "Session Id"
          },
          "status": {
            "type": "string",
            "title": "Status"
          },
          "progress": {
            "additionalProperties": true,
            "type": "object",
            "title": "Progress"
          },
          "timestamp": {
            "type": "string",
            "title": "Timestamp"
          }
        },
        "type": "object",
        "required": [
          "session_id",
          "status",
          "progress",
          "timestamp"
        ],
        "title": "VerificationStatus",
        "description": "Status of a verification session."
      }
    }
  }
}
